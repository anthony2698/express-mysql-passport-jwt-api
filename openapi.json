{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "TSS API Documentation",
    "description" : "This is API Documentation for developer it allows develper to better understanding of API",
    "contact" : {
      "name" : "Prashant Nirgun",
      "email" : "prashant.nirgun@gmail.com"
    },
    "version" : "Testing"
  },
  "servers" : [ {
    "url" : "http://localhost:5000/api"
  }, {
    "url" : "https://express-mysql-passport-jwt-api.herokuapp.com/api"
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "description" : "login end point",
        "requestBody" : {
          "content" : {
            "applicaiton/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Sucessfully login"
          }
        }
      }
    },
    "/item" : {
      "get" : {
        "description" : "Get all items",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 5
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "coma seprated field list",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "coma seprated field list",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "meta",
          "in" : "query",
          "description" : "Used if verbose information required for the query & resultset",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          }
        }, {
          "name" : "total_rows",
          "in" : "query",
          "description" : "find the totals rows in tables used to build pagination, if you are using meta total_rows is already included in meta option",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : false,
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Fetch all items"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "body_1" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "Enter username here"
          },
          "password" : {
            "type" : "string",
            "example" : "Enter password here"
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "example" : "Enter username here"
          },
          "password" : {
            "type" : "string",
            "example" : "Enter password here"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}